% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetSNList.R
\name{GetSNList}
\alias{GetSNList}
\title{Construct Cell-Type-Specific Similarity Network}
\usage{
GetSNList(emb_list, npcs = 20, k = 50, min.cts.per.region = 1, ncores = 1)
}
\arguments{
\item{emb_list}{A list of matrices where each matrix contains the embeddings for a single sample.
The rows correspond to different principal components (PCs) or features, and columns correspond to spatial regions or cells.}

\item{npcs}{An integer specifying the number of principal components or features to use from each embedding matrix.
Default is 20.}

\item{k}{An integer specifying the number of nearest neighbors to consider when constructing the KNN graph.
Default is 50.}

\item{min.cts.per.region}{An integer specifying the minimum number of distinct cell types that must be present
in each spatial region for it to be retained in the analysis. Default is 1.}

\item{ncores}{An integer specifying the number of cores to use for parallel computation. Default is 1.}
}
\value{
A list of sparse matrices where each matrix represents a similarity network (SN) for a sample.
The rows and columns of each matrix correspond to spatial regions, and the values represent similarity scores.
}
\description{
This function generates a list of similarity networks (SNs) for a given list of embeddings.
The embeddings represent spatial neighborhoods, and the function computes K-nearest neighbor (KNN)
graphs based on the provided embeddings to create similarity matrices.
}
\details{
This function first trims the input embeddings to retain only the top `npcs` principal components or features.
It then filters out spatial regions that do not meet the minimum cell type threshold.
For each sample, the function computes a KNN graph using the trimmed embeddings and converts the resulting
distances to similarity scores. Missing spatial regions are filled with zeros to ensure all samples have the same regions.
}
